{"version":3,"file":"js/97.124f6686.js","mappings":"+eAGA,MAAMA,EAAc,EAEpB,S,2gBC8BMC,GAAQC,EAAAA,EAAAA,IAAS,CACrBC,IAAK,IAAMC,EAAMC,WACjBC,IAAKL,GAASM,EAAK,oBAAqBN,KAGpCO,EAAgBC,IACpBR,EAAMA,OAAQ,EACdM,EAAKE,IAGDC,EAAU,IAAMF,EAAc,WAE9BG,EAAS,IAAMH,EAAc,U,iyBC5CnC,MAAMR,EAAc,EAEpB,S,oWCQA,MAAMY,EAAY,CAChB,QACA,OACA,UAGIC,GAASC,EAAAA,EAAAA,MAETC,GAAQC,EAAAA,EAAAA,IAAI,IAEZC,GAAeC,EAAAA,EAAAA,MAEfC,GAAsBH,EAAAA,EAAAA,KAAI,GAE1BI,GAASJ,EAAAA,EAAAA,IAAI,IAEnBK,eAAeC,IACb,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,IAAQ,eAC/BT,EAAMd,MAAQsB,EAASE,KAAKV,MAC5B,MAAOW,GACPT,EAAaS,MAAMA,EAAMC,UAI7B,SAASC,EAAYC,GACnBL,EAAAA,EAAAA,UAAY,UAASK,KAAMC,MAAMP,IAC/BN,EAAac,QAAQR,EAASI,SAC9BL,OACCU,OAAON,IACRT,EAAaS,MAAMA,EAAMC,Y,OAM7BM,EAAAA,EAAAA,KAAUZ,gBACFC,O,67CC/CR,MAAMtB,EAAc,EAEpB","sources":["webpack://admin-one-vue-tailwind/./src/components/DataTable.vue","webpack://admin-one-vue-tailwind/./src/components/ModalBox.vue","webpack://admin-one-vue-tailwind/./src/components/ModalBox.vue?1210","webpack://admin-one-vue-tailwind/./src/views/Memo/ListOfSelfMemo.vue","webpack://admin-one-vue-tailwind/./src/views/Memo/ListOfSelfMemo.vue?69ab"],"sourcesContent":["import script from \"./DataTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DataTable.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue'\nimport { mdiClose } from '@mdi/js'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Divider from '@/components/Divider.vue'\nimport Overlay from '@/components/Overlay.vue'\n\nconst props = defineProps({\n  title: {\n    type: String,\n    default: null\n  },\n  largeTitle: {\n    type: String,\n    default: null\n  },\n  button: {\n    type: String,\n    default: 'info'\n  },\n  buttonLabel: {\n    type: String,\n    default: 'Done'\n  },\n  hasCancel: Boolean,\n  modelValue: {\n    type: [String, Number, Boolean],\n    default: null\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'cancel', 'confirm'])\n\nconst value = computed({\n  get: () => props.modelValue,\n  set: value => emit('update:modelValue', value)\n})\n\nconst confirmCancel = mode => {\n  value.value = false\n  emit(mode)\n}\n\nconst confirm = () => confirmCancel('confirm')\n\nconst cancel = () => confirmCancel('cancel')\n</script>\n\n<template>\n  <overlay\n    v-show=\"value\"\n    @overlay-click=\"cancel\"\n  >\n    <card-component\n      v-show=\"value\"\n      :title=\"title\"\n      class=\"shadow-lg w-full max-h-modal md:w-3/5 lg:w-2/5 z-50\"\n      rounded=\"rounded-lg\"\n      :header-icon=\"mdiClose\"\n      modal\n      @header-icon-click=\"cancel\"\n    >\n      <div class=\"space-y-3\">\n        <h1\n          v-if=\"largeTitle\"\n          class=\"text-2xl\"\n        >\n          {{ largeTitle }}\n        </h1>\n        <slot />\n      </div>\n\n      <divider />\n\n      <jb-buttons>\n        <jb-button\n          :label=\"buttonLabel\"\n          :color=\"button\"\n          @click=\"confirm\"\n        />\n        <jb-button\n          v-if=\"hasCancel\"\n          label=\"Cancel\"\n          :color=\"button\"\n          outline\n          @click=\"cancel\"\n        />\n      </jb-buttons>\n    </card-component>\n  </overlay>\n</template>\n","import script from \"./ModalBox.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ModalBox.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, onMounted } from 'vue'\nimport MainSection from '@/components/MainSection.vue'\n// import Notification from '@/components/Notification.vue'\nimport DataTable from '@/components/DataTable.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Api from '@/api'\nimport ModalBox from '@/components/ModalBox.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport { mdiTrashCan, mdiEye, mdiPencil, mdiMessage, mdiAttachment } from '@mdi/js'\nimport { useToast } from 'vue-toastification'\nimport { useRouter } from 'vue-router'\nconst tableHead = [\n  'Title',\n  'Date',\n  'Action'\n]\n\nconst router = useRouter()\n\nconst memos = ref([])\n\nconst toastMessage = useToast()\n\nconst isModalDangerActive = ref(false)\n\nconst memoId = ref('')\n\nasync function getSelfMemos () {\n  try {\n    const response = await Api.get('/memos/self')\n    memos.value = response.data.memos\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\n\nfunction deleteMemo (id) {\n  Api.delete(`/memos/${id}`).then((response) => {\n    toastMessage.success(response.message)\n    getSelfMemos()\n  }).catch((error) => {\n    toastMessage.error(error.message)\n  })\n}\n// function viewMemoDetails (id) {\n//   router.push(`/memo/${id}/view`)\n// }\nonMounted(async () => {\n  await getSelfMemos()\n})\n</script>\n\n<template>\n  <div>\n    <main-section>\n      <card-component\n        class=\"mb-6\"\n        title=\"List of Created Memos\"\n        has-table\n      >\n        <data-table\n          :theads=\"tableHead\"\n        >\n          <tr\n            v-for=\"memo in memos\"\n            :key=\"memo.id\"\n          >\n            <td data-label=\"Title\">\n              {{ memo.title }}\n            </td>\n            <td data-label=\"Date\">\n              {{ memo.date }}\n            </td>\n            <td class=\"actions-cell\">\n              <jb-buttons\n                type=\"justify-start lg:justify-center\"\n                no-wrap\n              >\n                <jb-button\n                  color=\"info\"\n                  :icon=\"mdiEye\"\n                  small\n                  @click=\"router.push(`/memo/${memo.id}/view`)\"\n                />\n                <jb-button\n                  color=\"info\"\n                  :icon=\"mdiPencil\"\n                  small\n                  @click=\"router.push(`/memo/${memo.id}/edit`)\"\n                />\n                <jb-button\n                  color=\"info\"\n                  :icon=\"mdiAttachment\"\n                  small\n                  @click=\"router.push(`/memo/${memo.id}/attachments/self`)\"\n                />\n                <jb-button\n                  color=\"info\"\n                  :icon=\"mdiMessage\"\n                  small\n                  @click=\"router.push(`/memo/${memo.id}/comments`)\"\n                />\n                <jb-button\n                  color=\"danger\"\n                  :icon=\"mdiTrashCan\"\n                  small\n                  @click=\"isModalDangerActive = true, memoId = memo.id\"\n                />\n              </jb-buttons>\n            </td>\n          </tr>\n        </data-table>\n      </card-component>\n    </main-section>\n    <modal-box\n      v-model=\"isModalDangerActive\"\n      large-title=\"Please confirm\"\n      button=\"danger\"\n      has-cancel\n      @confirm=\"deleteMemo(memoId)\"\n    >\n      <p>Do you wish to delete this record?</p>\n    </modal-box>\n  </div>\n</template>\n","import script from \"./ListOfSelfMemo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ListOfSelfMemo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["__exports__","value","computed","get","props","modelValue","set","emit","confirmCancel","mode","confirm","cancel","tableHead","router","useRouter","memos","ref","toastMessage","useToast","isModalDangerActive","memoId","async","getSelfMemos","response","Api","data","error","message","deleteMemo","id","then","success","catch","onMounted"],"sourceRoot":""}