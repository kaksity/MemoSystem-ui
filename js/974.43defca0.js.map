{"version":3,"file":"js/974.43defca0.js","mappings":"mcAcA,MAAMA,GAAQC,EAAAA,EAAAA,MAERC,GAAeC,EAAAA,EAAAA,KAAS,KAC5B,MAAMC,EAAO,GACPC,EAAcL,EAAMM,UAAUC,OAUpC,OARIF,EAAc,GAChBD,EAAKI,KAAK,0BAGQ,IAAhBH,GACFD,EAAKI,KAAK,kBAGLJ,CAAI,I,+RCzBb,MAAMK,EAAc,EAEpB,O,4PCSA,MAAMC,GAASC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,IAAI,CAAC,GACZC,GAAaD,EAAAA,EAAAA,IAAI,IACjBE,GAAcF,EAAAA,EAAAA,IAAI,IAClBG,GAAeC,EAAAA,EAAAA,MAEfC,GAAOC,EAAAA,EAAAA,IAAS,CACpBC,KAAM,OAGFC,GAASR,EAAAA,EAAAA,IAAIH,EAAOY,OAAOD,QAEjC,SAASE,EAAcC,GACrBN,EAAKE,KAAOI,EAAEC,OAAOC,OAASF,EAAEG,aAAaD,KAC/C,CAEAE,eAAeC,IACb,IACE,GAAkB,OAAdX,EAAKE,KACP,OAEF,MAAMU,EAAa,IAAIC,SACvBD,EAAWE,OAAO,OAAQd,EAAKE,KAAK,IACpC,MAAM,QAAEa,SAAkBC,EAAAA,EAAAA,KAAU,UAASb,EAAOc,oBAAqBL,SACnEM,EAAmBH,GACzBjB,EAAaqB,QAAQJ,SACfG,EAAmBf,EAAOc,MAGlC,CAFE,MAAOG,GACPtB,EAAasB,MAAMA,EAAML,QAC3B,CACF,CACAL,eAAeW,EAAgBlB,GAC7B,IACE,MAAM,KAAEmB,SAAeN,EAAAA,EAAAA,IAAS,UAASb,KACzCT,EAAKuB,MAAQK,CAGf,CAFE,MAAOF,GACPtB,EAAasB,MAAMA,EAAMG,OAC3B,CACF,CACA,SAASC,EAAoBC,GAC3BC,OAAOC,KAAKF,EACd,CACAf,eAAeQ,EAAoBf,GACjC,IACE,MAAM,KAAEmB,SAAeN,EAAAA,EAAAA,IAAS,UAASb,iBACzCN,EAAYoB,MAAQK,CAGtB,CAFE,MAAOF,GACPtB,EAAasB,MAAMA,EAAML,QAC3B,CACF,CACAL,eAAekB,EAAuBC,GACpC,IACE,MAAM,QAAEd,SAAkBC,EAAAA,EAAAA,UAAY,UAASb,EAAOc,qBAAqBY,WACrEX,EAAmBf,EAAOc,OAChCnB,EAAaqB,QAAQJ,EAGvB,CAFE,MAAOK,GACPtB,EAAasB,MAAMA,EAAML,QAC3B,CACF,C,OACAe,EAAAA,EAAAA,KAAUpB,gBACFW,EAAelB,EAAOc,aACtBC,EAAmBf,EAAOc,MAAM,I,2+CCxExC,MAAM1B,EAAc,EAEpB,O","sources":["webpack://admin-one-vue-tailwind/./src/components/Field.vue","webpack://admin-one-vue-tailwind/./src/components/Field.vue?7442","webpack://admin-one-vue-tailwind/./src/views/Memo/SelfMemoAttachments.vue","webpack://admin-one-vue-tailwind/./src/views/Memo/SelfMemoAttachments.vue?dfa4"],"sourcesContent":["<script setup>\nimport { computed, useSlots } from 'vue'\n\ndefineProps({\n  label: {\n    type: String,\n    default: null\n  },\n  help: {\n    type: String,\n    default: null\n  }\n})\n\nconst slots = useSlots()\n\nconst wrapperClass = computed(() => {\n  const base = []\n  const slotsLength = slots.default().length\n\n  if (slotsLength > 1) {\n    base.push('grid grid-cols-1 gap-3')\n  }\n\n  if (slotsLength === 2) {\n    base.push('md:grid-cols-2')\n  }\n\n  return base\n})\n</script>\n\n<template>\n  <div class=\"mb-6 last:mb-0\">\n    <label\n      v-if=\"label\"\n      class=\"block font-bold mb-2\"\n    >{{ label }}</label>\n    <div :class=\"wrapperClass\">\n      <slot />\n    </div>\n    <div\n      v-if=\"help\"\n      class=\"text-xs text-red-500 dark:text-red-400 mt-1\"\n    >\n      {{ help[0].message }}\n    </div>\n  </div>\n</template>\n","import script from \"./Field.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Field.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, onMounted, reactive } from 'vue'\nimport { mdiTrashCan, mdiEye, mdiBallot } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Field from '@/components/Field.vue'\nimport Divider from '@/components/Divider.vue'\nimport Api from '@/api'\nimport { useToast } from 'vue-toastification'\nimport { useRoute } from 'vue-router'\nimport JbButtons from '@/components/JbButtons.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport Control from '@/components/Control.vue'\n\nconst routes = useRoute()\nconst memo = ref({})\nconst recipients = ref([])\nconst attachments = ref([])\nconst toastMessage = useToast()\n\nconst form = reactive({\n  file: null\n})\n\nconst memoId = ref(routes.params.memoId)\n\nfunction onFileChange (e) {\n  form.file = e.target.files || e.dataTransfer.files\n}\n\nasync function uploadAttachment () {\n  try {\n    if (form.file === null) {\n      return\n    }\n    const uploadForm = new FormData()\n    uploadForm.append('file', form.file[0])\n    const { message } = await Api.post(`/memos/${memoId.value}/attachments`, uploadForm)\n    await getMemoAttachments(message)\n    toastMessage.success(message)\n    await getMemoAttachments(memoId.value)\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\nasync function getMemoDetails (memoId) {\n  try {\n    const { data } = await Api.get(`/memos/${memoId}`)\n    memo.value = data\n  } catch (error) {\n    toastMessage.error(error.detail)\n  }\n}\nfunction viewMemoAttachment (url) {\n  window.open(url)\n}\nasync function getMemoAttachments (memoId) {\n  try {\n    const { data } = await Api.get(`/memos/${memoId}/attachments`)\n    attachments.value = data\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\nasync function deleteMemoAttachments (memoAttachmentId) {\n  try {\n    const { message } = await Api.delete(`/memos/${memoId.value}/attachments/${memoAttachmentId}`)\n    await getMemoAttachments(memoId.value)\n    toastMessage.success(message)\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\nonMounted(async () => {\n  await getMemoDetails(memoId.value)\n  await getMemoAttachments(memoId.value)\n})\n\n</script>\n<template>\n  <div>\n    <main-section>\n      <card-component\n        title=\"Memo Details\"\n        :icon=\"mdiBallot\"\n      >\n        <field\n          v-if=\"recipients.length\"\n          label=\"Recipients\"\n        >\n          <span\n            v-for=\"recipient in recipients\"\n            :key=\"recipient.recipient\"\n            class=\"inline-block px-2 py-1\"\n          >\n            {{ recipient.user.fullName }}\n          </span>\n        </field>\n        <divider />\n        <field label=\"Memo Title\">\n          {{ memo.title }}\n        </field>\n        <divider />\n        <field label=\"Date\">\n          {{ memo.date }}\n        </field>\n        <divider />\n        <field label=\"Attachments\">\n          <control\n            type=\"file\"\n            placeholder=\"Enter the name of document\"\n            @change=\"onFileChange\"\n          />\n        </field>\n        <field label=\"Attached Files\">\n          <div\n            v-for=\"attachment in attachments\"\n            :key=\"attachment.id\"\n          >\n            <jb-buttons class=\"justify-start lg:justify-center\">\n              <jb-button\n                color=\"info\"\n                :icon=\"mdiEye\"\n                label=\"View Attachment\"\n                @click=\"viewMemoAttachment(attachment.url)\"\n              />\n              <jb-button\n                color=\"danger\"\n                :icon=\"mdiTrashCan\"\n                label=\"Delete Attachments\"\n                @click=\"deleteMemoAttachments(attachment.id)\"\n              />\n            </jb-buttons>\n          </div>\n        </field>\n        <divider />\n        <divider />\n        <jb-buttons>\n          <jb-button\n            color=\"info\"\n            label=\"Send\"\n            @click=\"uploadAttachment\"\n          />\n        </jb-buttons>\n      </card-component>\n    </main-section>\n  </div>\n</template>\n","import script from \"./SelfMemoAttachments.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SelfMemoAttachments.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["slots","useSlots","wrapperClass","computed","base","slotsLength","default","length","push","__exports__","routes","useRoute","memo","ref","recipients","attachments","toastMessage","useToast","form","reactive","file","memoId","params","onFileChange","e","target","files","dataTransfer","async","uploadAttachment","uploadForm","FormData","append","message","Api","value","getMemoAttachments","success","error","getMemoDetails","data","detail","viewMemoAttachment","url","window","open","deleteMemoAttachments","memoAttachmentId","onMounted"],"sourceRoot":""}