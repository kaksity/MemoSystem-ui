{"version":3,"file":"js/727.02b39f83.js","mappings":"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","sources":["webpack://admin-one-vue-tailwind/./src/components/Field.vue","webpack://admin-one-vue-tailwind/./src/components/Field.vue?7442","webpack://admin-one-vue-tailwind/./src/views/Memo/EditMemo.vue","webpack://admin-one-vue-tailwind/./src/views/Memo/EditMemo.vue?7440"],"sourcesContent":["<script setup>\nimport { computed, useSlots } from 'vue'\n\ndefineProps({\n  label: {\n    type: String,\n    default: null\n  },\n  help: {\n    type: String,\n    default: null\n  }\n})\n\nconst slots = useSlots()\n\nconst wrapperClass = computed(() => {\n  const base = []\n  const slotsLength = slots.default().length\n\n  if (slotsLength > 1) {\n    base.push('grid grid-cols-1 gap-3')\n  }\n\n  if (slotsLength === 2) {\n    base.push('md:grid-cols-2')\n  }\n\n  return base\n})\n</script>\n\n<template>\n  <div class=\"mb-6 last:mb-0\">\n    <label\n      v-if=\"label\"\n      class=\"block font-bold mb-2\"\n    >{{ label }}</label>\n    <div :class=\"wrapperClass\">\n      <slot />\n    </div>\n    <div\n      v-if=\"help\"\n      class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\"\n    >\n      {{ help }}\n    </div>\n  </div>\n</template>\n","import script from \"./Field.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Field.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { reactive, ref, onMounted } from 'vue'\nimport { mdiBallot } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport Api from '@/api'\nimport { useToast } from 'vue-toastification'\nimport { useRoute } from 'vue-router'\n\n// const receipients = ref([])\nconst routes = useRoute()\nconst receipients = ref([])\nconst editor = ref(null)\nconst toastMessage = useToast()\nconst memo = ref({})\n\nconst memoId = ref(routes.params.memoId)\n\nconst selectedReceipients = ref([])\nconst receipientSelectBox = ref({})\nconst form = reactive({\n  receipients: null,\n  content: '',\n  title: '',\n  date: new Date().toString()\n})\n\nasync function getMemoReceipients (memoId) {\n  try {\n    const response = await Api.get(`/memos/${memoId}/receipients`)\n    selectedReceipients.value = response.data.receipients\n    selectedReceipients.value = selectedReceipients.value.map(element => {\n      return {\n        receipient: element.user.id,\n        name: element.user.fullName\n      }\n    })\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\nasync function getMemoDetails (memoId) {\n  try {\n    const response = await Api.get(`/memos/${memoId}`)\n    memo.value = response.data.memo\n    form.title = memo.value.title\n    form.date = memo.value.date\n    form.content = memo.value.content\n    editor.value.setHTML(form.content)\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\n\nfunction clearInputs () {\n  selectedReceipients.value = []\n  form.content = ''\n  form.date = new Date().toString()\n  form.title = ''\n  editor.value.setHTML(form.content)\n}\n\nonMounted(async () => {\n  await getUsers()\n  await getMemoDetails(memoId.value)\n  await getMemoReceipients(memoId.value)\n})\n\nfunction setReceipient () {\n  const isExist = selectedReceipients.value.find(t => t.receipient === receipientSelectBox.value.id)\n  if (!isExist) {\n    selectedReceipients.value.push({\n      receipient: receipientSelectBox.value.id,\n      name: receipientSelectBox.value.label\n    })\n  }\n}\nfunction removeSelectedReciepients (id) {\n  const newSelectedReceipients = []\n  selectedReceipients.value.forEach(item => {\n    if (item.receipient !== id) {\n      newSelectedReceipients.push(item)\n    }\n  })\n  selectedReceipients.value = newSelectedReceipients\n}\n\nasync function getUsers () {\n  try {\n    const response = await Api.get('/users')\n    response.data.forEach(element => {\n      receipients.value.push({\n        id: element.id,\n        label: element.fullName\n      })\n    })\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\n\nconst submit = async () => {\n  try {\n    if (selectedReceipients.value.length === 0) {\n      toastMessage.error('You must select atleast 1 receipient')\n      return\n    } else if (form.title === '') {\n      toastMessage.error('Memo Title is required')\n      return\n    } else if (form.content === '') {\n      toastMessage.error('Memo Content is required')\n      return\n    }\n    form.receipients = selectedReceipients\n    const response = await Api.put(`/memos/${memoId.value}`, form)\n    toastMessage.success(response.message)\n    clearInputs()\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\n</script>\n<template>\n  <div>\n    <main-section>\n      <card-component\n        title=\"Edit Memo\"\n        :icon=\"mdiBallot\"\n        form\n        @submit.prevent=\"submit\"\n      >\n        <field label=\"Receipient\">\n          <control\n            v-model=\"receipientSelectBox\"\n            :options=\"receipients\"\n            @change=\"setReceipient\"\n          />\n        </field>\n        <div\n          v-if=\"selectedReceipients.length\"\n          class=\"bg-opacity-50 p-3 dark:bg-gray-800\"\n        >\n          <span\n            v-for=\"receipient in selectedReceipients\"\n            :key=\"receipient.receipient\"\n            class=\"inline-block px-2 py-1 rounded-sm mr-2 text-sm dark:bg-gray-700 light:bg-gray-300\"\n          >\n            {{ receipient.name }} <span><button\n              class=\"inline-block bg-red-700 p-1 rounded-sm mr-2 text-white-700\"\n              @click=\"removeSelectedReciepients(receipient.receipient)\"\n            >X</button></span>\n          </span>\n        </div>\n        <divider />\n        <field label=\"Memo Title\">\n          <control\n            v-model=\"form.title\"\n          />\n        </field>\n        <divider />\n        <field label=\"Date\">\n          <datepicker\n            v-model=\"form.date\"\n            auto-apply\n            alt-position\n          />\n        </field>\n        <divider />\n        <field label=\"Memo Content\">\n          <QuillEditor\n            ref=\"editor\"\n            v-model:content=\"form.content\"\n            theme=\"snow\"\n            content-type=\"html\"\n            toolbar=\"full\"\n          />\n        </field>\n        <divider />\n        <jb-buttons>\n          <jb-button\n            type=\"submit\"\n            color=\"info\"\n            label=\"Send\"\n          />\n        </jb-buttons>\n      </card-component>\n    </main-section>\n  </div>\n</template>\n","import script from \"./EditMemo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditMemo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["slots","useSlots","wrapperClass","computed","base","slotsLength","default","length","push","__exports__","routes","useRoute","receipients","ref","editor","toastMessage","useToast","memo","memoId","params","selectedReceipients","receipientSelectBox","form","reactive","content","title","date","Date","toString","async","getMemoReceipients","response","Api","value","data","map","element","receipient","user","id","name","fullName","error","message","getMemoDetails","setHTML","clearInputs","setReceipient","isExist","find","t","label","removeSelectedReciepients","newSelectedReceipients","forEach","item","getUsers","onMounted","submit","success"],"sourceRoot":""}