{"version":3,"file":"js/forms.815748db.js","mappings":"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","sources":["webpack://admin-one-vue-tailwind/./src/components/DataTable.vue","webpack://admin-one-vue-tailwind/./src/components/Field.vue","webpack://admin-one-vue-tailwind/./src/components/Field.vue?7442","webpack://admin-one-vue-tailwind/./src/components/ModalBox.vue","webpack://admin-one-vue-tailwind/./src/components/ModalBox.vue?1210","webpack://admin-one-vue-tailwind/./src/views/Dashboard/Index.vue","webpack://admin-one-vue-tailwind/./src/views/File/FileDetails.vue","webpack://admin-one-vue-tailwind/./src/views/File/FileDetails.vue?18ab","webpack://admin-one-vue-tailwind/./src/views/File/ListFile.vue","webpack://admin-one-vue-tailwind/./src/views/File/ListFile.vue?0a83","webpack://admin-one-vue-tailwind/./src/views/File/UploadFile.vue","webpack://admin-one-vue-tailwind/./src/views/File/UploadFile.vue?0f50","webpack://admin-one-vue-tailwind/./src/views/Inventory/InventoryDetails.vue","webpack://admin-one-vue-tailwind/./src/views/Inventory/InventoryDetails.vue?fd6d","webpack://admin-one-vue-tailwind/./src/views/Inventory/ListInventory.vue","webpack://admin-one-vue-tailwind/./src/views/Inventory/ListInventory.vue?d2e9"],"sourcesContent":["import script from \"./DataTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DataTable.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed, useSlots } from 'vue'\n\ndefineProps({\n  label: {\n    type: String,\n    default: null\n  },\n  help: {\n    type: String,\n    default: null\n  }\n})\n\nconst slots = useSlots()\n\nconst wrapperClass = computed(() => {\n  const base = []\n  const slotsLength = slots.default().length\n\n  if (slotsLength > 1) {\n    base.push('grid grid-cols-1 gap-3')\n  }\n\n  if (slotsLength === 2) {\n    base.push('md:grid-cols-2')\n  }\n\n  return base\n})\n</script>\n\n<template>\n  <div class=\"mb-6 last:mb-0\">\n    <label\n      v-if=\"label\"\n      class=\"block font-bold mb-2\"\n    >{{ label }}</label>\n    <div :class=\"wrapperClass\">\n      <slot />\n    </div>\n    <div\n      v-if=\"help\"\n      class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\"\n    >\n      {{ help }}\n    </div>\n  </div>\n</template>\n","import script from \"./Field.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Field.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue'\nimport { mdiClose } from '@mdi/js'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Divider from '@/components/Divider.vue'\nimport Overlay from '@/components/Overlay.vue'\n\nconst props = defineProps({\n  title: {\n    type: String,\n    default: null\n  },\n  largeTitle: {\n    type: String,\n    default: null\n  },\n  button: {\n    type: String,\n    default: 'info'\n  },\n  buttonLabel: {\n    type: String,\n    default: 'Done'\n  },\n  hasCancel: Boolean,\n  modelValue: {\n    type: [String, Number, Boolean],\n    default: null\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'cancel', 'confirm'])\n\nconst value = computed({\n  get: () => props.modelValue,\n  set: value => emit('update:modelValue', value)\n})\n\nconst confirmCancel = mode => {\n  value.value = false\n  emit(mode)\n}\n\nconst confirm = () => confirmCancel('confirm')\n\nconst cancel = () => confirmCancel('cancel')\n</script>\n\n<template>\n  <overlay\n    v-show=\"value\"\n    @overlay-click=\"cancel\"\n  >\n    <card-component\n      v-show=\"value\"\n      :title=\"title\"\n      class=\"shadow-lg w-full max-h-modal md:w-3/5 lg:w-2/5 z-50\"\n      rounded=\"rounded-lg\"\n      :header-icon=\"mdiClose\"\n      modal\n      @header-icon-click=\"cancel\"\n    >\n      <div class=\"space-y-3\">\n        <h1\n          v-if=\"largeTitle\"\n          class=\"text-2xl\"\n        >\n          {{ largeTitle }}\n        </h1>\n        <slot />\n      </div>\n\n      <divider />\n\n      <jb-buttons>\n        <jb-button\n          :label=\"buttonLabel\"\n          :color=\"button\"\n          @click=\"confirm\"\n        />\n        <jb-button\n          v-if=\"hasCancel\"\n          label=\"Cancel\"\n          :color=\"button\"\n          outline\n          @click=\"cancel\"\n        />\n      </jb-buttons>\n    </card-component>\n  </overlay>\n</template>\n","import script from \"./ModalBox.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ModalBox.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","const script = {}\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, onMounted } from 'vue'\nimport { mdiBallot } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Field from '@/components/Field.vue'\nimport Divider from '@/components/Divider.vue'\nimport Api from '@/api'\nimport { useToast } from 'vue-toastification'\nimport { useRoute } from 'vue-router'\n\nconst routes = useRoute()\nconst file = ref({})\n\nconst toastMessage = useToast()\n\nasync function getFileDetails (fileId) {\n  try {\n    const response = await Api.get(`/files/${fileId}`)\n    file.value = response.data.file\n    document.getElementById('fileContent').innerHTML = file.value.description\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\nonMounted(async () => {\n  const fileId = routes.params.fileId\n  await getFileDetails(fileId)\n})\n\n</script>\n<template>\n  <div>\n    <main-section>\n      <card-component\n        title=\"File Details\"\n        :icon=\"mdiBallot\"\n      >\n        <field label=\"File Name\">\n          {{ file.name }}\n        </field>\n        <divider />\n        <field label=\"File Number\">\n          {{ file.code }}\n        </field>\n        <divider />\n        <field label=\"File Description\">\n          <div id=\"fileContent\" />\n        </field>\n        <divider />\n      </card-component>\n    </main-section>\n  </div>\n</template>\n","import script from \"./FileDetails.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FileDetails.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, onMounted } from 'vue'\nimport MainSection from '@/components/MainSection.vue'\nimport DataTable from '@/components/DataTable.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Api from '@/api'\nimport ModalBox from '@/components/ModalBox.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport { mdiEye, mdiTrashCan, mdiUpload } from '@mdi/js'\nimport { useToast } from 'vue-toastification'\nimport { useRouter } from 'vue-router'\nconst tableHead = [\n  'File Name',\n  'File Number',\n  'Created On'\n]\n\nconst router = useRouter()\n\nconst files = ref([])\n\nconst toastMessage = useToast()\n\nconst isModalDangerActive = ref(false)\n\nconst fileId = ref('')\n\nasync function getFiles () {\n  try {\n    const response = await Api.get('/files')\n    files.value = response.data.files\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\n\nfunction deleteFile (id) {\n  Api.delete(`/files/${id}`).then((response) => {\n    toastMessage.success(response.message)\n    getFiles()\n  }).catch((error) => {\n    toastMessage.error(error.message)\n  })\n}\n\nonMounted(async () => {\n  await getFiles()\n})\n</script>\n\n<template>\n  <div>\n    <main-section>\n      <card-component\n        class=\"mb-6\"\n        title=\"List of Files\"\n        has-table\n      >\n        <data-table\n          :theads=\"tableHead\"\n        >\n          <tr\n            v-for=\"file in files\"\n            :key=\"file.id\"\n          >\n            <td data-label=\"File Name\">\n              {{ file.name }}\n            </td>\n            <td data-label=\"File Number\">\n              {{ file.code }}\n            </td>\n            <td data-label=\"Created On\">\n              <small\n                class=\"text-gray-500 dark:text-gray-400\"\n                :title=\"file.createdAt\"\n              >{{ file.createdAt }}</small>\n            </td>\n            <td class=\"actions-cell\">\n              <jb-buttons\n                type=\"justify-start lg:justify-end\"\n                no-wrap\n              >\n                <jb-button\n                  color=\"info\"\n                  :icon=\"mdiEye\"\n                  small\n                  @click=\"router.push(`/file/${file.id}/view`)\"\n                />\n                <jb-button\n                  color=\"primary\"\n                  :icon=\"mdiUpload\"\n                  small\n                  @click=\"router.push(`/file/${file.id}/upload`)\"\n                />\n                <jb-button\n                  color=\"danger\"\n                  :icon=\"mdiTrashCan\"\n                  small\n                  @click=\"isModalDangerActive = true, fileId = file.id\"\n                />\n              </jb-buttons>\n            </td>\n          </tr>\n        </data-table>\n      </card-component>\n    </main-section>\n\n    <modal-box\n      v-model=\"isModalDangerActive\"\n      large-title=\"Please confirm\"\n      button=\"danger\"\n      has-cancel\n      @confirm=\"deleteFile(fileId)\"\n    >\n      <p>Do you wish to delete this record?</p>\n    </modal-box>\n  </div>\n</template>\n","import script from \"./ListFile.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ListFile.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, onMounted, reactive } from 'vue'\nimport MainSection from '@/components/MainSection.vue'\nimport DataTable from '@/components/DataTable.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Api from '@/api'\nimport ModalBox from '@/components/ModalBox.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport { mdiEye, mdiTrashCan, mdiBallot } from '@mdi/js'\nimport { useToast } from 'vue-toastification'\nimport { useRoute } from 'vue-router'\n\nconst routes = useRoute()\n\nconst tableHead = [\n  'Document',\n  'Created On'\n]\n\nconst fileDocuments = ref([])\n\nconst toastMessage = useToast()\n\nconst fileDocumentId = ref('')\nconst isModalDangerActive = ref(false)\n\nconst fileId = ref(routes.params.fileId)\n\nconst form = reactive({\n  documentName: '',\n  fileId: fileId,\n  file: null\n})\n\nasync function getFileDocuments (fileId) {\n  try {\n    const response = await Api.get(`/files/${fileId}/documents`)\n    fileDocuments.value = response.data.fileDocuments\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\n\nfunction onFileChange (e) {\n  form.file = e.target.files || e.dataTransfer.files\n}\n\nfunction clearInputs () {\n  form.documentName = ''\n  form.file = null\n}\n\nasync function submit () {\n  if (form.documentName === '') {\n    toastMessage.error('Document Name is required')\n    return\n  } else if (form.file === null) {\n    toastMessage.error('Document is required')\n    return\n  }\n\n  try {\n    const uploadForm = new FormData()\n    uploadForm.append('fileId', form.fileId)\n    uploadForm.append('documentName', form.documentName)\n    uploadForm.append('file', form.file[0])\n\n    const response = await Api.post('/files/documents', uploadForm)\n\n    toastMessage.success(response.message)\n    await getFileDocuments(fileId.value)\n    clearInputs()\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\n\nfunction openFileToView (url) {\n  window.open(url)\n}\nasync function deleteFileDocument (id) {\n  try {\n    const response = await Api.delete(`/files/documents/${id}`)\n    toastMessage.success(response.message)\n    await getFileDocuments(fileId.value)\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\n\nonMounted(async () => {\n  await getFileDocuments(fileId.value)\n})\n</script>\n\n<template>\n  <div>\n    <main-section>\n      <card-component\n        title=\"Create File\"\n        :icon=\"mdiBallot\"\n        form\n        @submit.prevent=\"submit\"\n      >\n        <field label=\"Document Name\">\n          <control\n            v-model=\"form.documentName\"\n            placeholder=\"Enter the name of document\"\n          />\n        </field>\n        <divider />\n        <field label=\"Document\">\n          <control\n            type=\"file\"\n            placeholder=\"Enter the name of document\"\n            @change=\"onFileChange\"\n          />\n        </field>\n        <divider />\n        <divider />\n        <jb-buttons>\n          <jb-button\n            type=\"submit\"\n            color=\"info\"\n            label=\"Send\"\n          />\n        </jb-buttons>\n      </card-component>\n    </main-section>\n    <main-section>\n      <card-component\n        class=\"mb-6\"\n        title=\"List of Documents\"\n        has-table\n      >\n        <data-table\n          :theads=\"tableHead\"\n        >\n          <tr\n            v-for=\"document in fileDocuments\"\n            :key=\"document.id\"\n          >\n            <td data-label=\"Document\">\n              {{ document.name }}\n            </td>\n            <td data-label=\"Created On\">\n              <small\n                class=\"text-gray-500 dark:text-gray-400\"\n                :title=\"document.createdAt\"\n              >{{ document.createdAt }}</small>\n            </td>\n            <td class=\"actions-cell\">\n              <jb-buttons\n                type=\"justify-start lg:justify-end\"\n                no-wrap\n              >\n                <jb-button\n                  color=\"info\"\n                  :icon=\"mdiEye\"\n                  small\n                  @click=\"openFileToView(document.url)\"\n                />\n                <jb-button\n                  color=\"danger\"\n                  :icon=\"mdiTrashCan\"\n                  small\n                  @click=\"isModalDangerActive = true, fileDocumentId = document.id\"\n                />\n              </jb-buttons>\n            </td>\n          </tr>\n        </data-table>\n      </card-component>\n    </main-section>\n    <modal-box\n      v-model=\"isModalDangerActive\"\n      large-title=\"Please confirm\"\n      button=\"danger\"\n      has-cancel\n      @confirm=\"deleteFileDocument(fileDocumentId)\"\n    >\n      <p>Do you wish to delete this record?</p>\n    </modal-box>\n  </div>\n</template>\n","import script from \"./UploadFile.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UploadFile.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { onMounted, reactive } from 'vue'\nimport { mdiBallot } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport Api from '@/api'\nimport { useToast } from 'vue-toastification'\nimport { useRoute } from 'vue-router'\n\nconst toastMessage = useToast()\nconst route = useRoute()\n\nconst form = reactive({\n  article: '',\n  quantity: '',\n  code: ''\n})\n\nasync function getSingleInventory (id) {\n  try {\n    const { data } = await Api.get(`/inventories/${id}`)\n    form.article = data.article\n    form.quantity = data.quantity\n    form.code = data.code\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\n\nasync function submit () {\n  try {\n    if (form.article === '') {\n      toastMessage.error('Inventory Article is required')\n      return\n    } else if (form.code === '') {\n      toastMessage.error('Inventory Code is required')\n      return\n    } else if (form.quantity === '') {\n      toastMessage.error('Inventory Quantity is required')\n      return\n    }\n    const response = await Api.put(`/inventories/${route.params.inventoryId}`, form)\n    await getSingleInventory(route.params.inventoryId)\n    toastMessage.success(response.message)\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\n\nonMounted(async () => {\n  await getSingleInventory(route.params.inventoryId)\n})\n</script>\n<template>\n  <div>\n    <main-section>\n      <card-component\n        title=\"Update Inventory\"\n        :icon=\"mdiBallot\"\n        form\n        @submit.prevent=\"submit\"\n      >\n        <field label=\"Inventory Article\">\n          <control\n            v-model=\"form.article\"\n          />\n        </field>\n        <divider />\n        <field label=\"Inventory Code\">\n          <control\n            v-model=\"form.code\"\n            disabled\n          />\n        </field>\n        <divider />\n        <field\n          label=\"Inventory Quantity\"\n        >\n          <control\n            v-model=\"form.quantity\"\n          />\n        </field>\n        <divider />\n        <jb-buttons>\n          <jb-button\n            type=\"submit\"\n            color=\"info\"\n            label=\"Update\"\n          />\n        </jb-buttons>\n      </card-component>\n    </main-section>\n  </div>\n</template>\n","import script from \"./InventoryDetails.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InventoryDetails.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, onMounted } from 'vue'\nimport MainSection from '@/components/MainSection.vue'\nimport DataTable from '@/components/DataTable.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Api from '@/api'\nimport ModalBox from '@/components/ModalBox.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport { mdiEye, mdiTrashCan } from '@mdi/js'\nimport { useToast } from 'vue-toastification'\nimport { useRouter } from 'vue-router'\nconst tableHead = [\n  'Inventory Article',\n  'Inventory Code',\n  'Inventory Quantity'\n]\n\nconst router = useRouter()\n\nconst inventories = ref([])\n\nconst toastMessage = useToast()\n\nconst isModalDangerActive = ref(false)\n\nconst inventoryId = ref('')\n\nasync function getInventories () {\n  try {\n    const response = await Api.get('/inventories')\n    inventories.value = response.data\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\n\nfunction deleteInventory (id) {\n  Api.delete(`/inventories/${id}`).then((response) => {\n    toastMessage.success(response.message)\n    getInventories()\n  }).catch((error) => {\n    toastMessage.error(error.message)\n  })\n}\n\nonMounted(async () => {\n  await getInventories()\n})\n</script>\n\n<template>\n  <div>\n    <main-section>\n      <card-component\n        class=\"mb-6\"\n        title=\"List of Inventories\"\n        has-table\n      >\n        <data-table\n          :theads=\"tableHead\"\n        >\n          <tr\n            v-for=\"inventory in inventories\"\n            :key=\"inventory.id\"\n          >\n            <td data-label=\"Inventory Article\">\n              {{ inventory.article }}\n            </td>\n            <td data-label=\"Inventory Code\">\n              {{ inventory.code }}\n            </td>\n            <td data-label=\"Inventory Quantity\">\n              {{ inventory.quantity }}\n            </td>\n            <td class=\"actions-cell\">\n              <jb-buttons\n                type=\"justify-start lg:justify-end\"\n                no-wrap\n              >\n                <jb-button\n                  color=\"info\"\n                  :icon=\"mdiEye\"\n                  small\n                  @click=\"router.push(`/inventory/${inventory.id}/view`)\"\n                />\n                <jb-button\n                  color=\"danger\"\n                  :icon=\"mdiTrashCan\"\n                  small\n                  @click=\"isModalDangerActive = true, inventoryId = inventory.id\"\n                />\n              </jb-buttons>\n            </td>\n          </tr>\n        </data-table>\n      </card-component>\n    </main-section>\n\n    <modal-box\n      v-model=\"isModalDangerActive\"\n      large-title=\"Please confirm\"\n      button=\"danger\"\n      has-cancel\n      @confirm=\"deleteInventory(inventoryId)\"\n    >\n      <p>Do you wish to delete this record?</p>\n    </modal-box>\n  </div>\n</template>\n","import script from \"./ListInventory.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ListInventory.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["__exports__","slots","useSlots","wrapperClass","computed","base","slotsLength","default","length","push","value","get","props","modelValue","set","emit","confirmCancel","mode","confirm","cancel","script","routes","useRoute","file","ref","toastMessage","useToast","async","getFileDetails","fileId","response","Api","data","document","getElementById","innerHTML","description","error","message","onMounted","params","tableHead","router","useRouter","files","isModalDangerActive","getFiles","deleteFile","id","then","success","catch","fileDocuments","fileDocumentId","form","reactive","documentName","getFileDocuments","onFileChange","e","target","dataTransfer","clearInputs","submit","uploadForm","FormData","append","openFileToView","url","window","open","deleteFileDocument","route","article","quantity","code","getSingleInventory","inventoryId","inventories","getInventories","deleteInventory"],"sourceRoot":""}