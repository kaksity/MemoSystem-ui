{"version":3,"file":"js/288.f6ba1ff4.js","mappings":"8aAcA,MAAMA,GAAQC,EAAAA,EAAAA,MAERC,GAAeC,EAAAA,EAAAA,KAAS,KAC5B,MAAMC,EAAO,GACPC,EAAcL,EAAMM,UAAUC,OAUpC,OARIF,EAAc,GAChBD,EAAKI,KAAK,0BAGQ,IAAhBH,GACFD,EAAKI,KAAK,kBAGLJ,K,oRCzBT,MAAMK,EAAc,EAEpB,S,2SCQA,MAAMC,GAAcC,EAAAA,EAAAA,IAAI,IAClBC,GAAeC,EAAAA,EAAAA,MAGfC,GAASH,EAAAA,EAAAA,IAAI,MAEbI,GAAsBJ,EAAAA,EAAAA,IAAI,IAC1BK,GAAsBL,EAAAA,EAAAA,IAAI,IAC1BM,GAAOC,EAAAA,EAAAA,IAAS,CACpBR,YAAa,KACbS,QAAS,GACTC,MAAO,GACPC,MAAM,IAAIC,MAAOC,aAGnB,SAASC,IACPT,EAAoBU,MAAQ,GAC5BR,EAAKE,QAAU,GACfF,EAAKI,MAAO,IAAIC,MAAOC,WACvBN,EAAKG,MAAQ,GACbN,EAAOW,MAAMC,QAAQ,IAMvB,SAASC,IACP,MAAMC,EAAUb,EAAoBU,MAAMI,MAAKC,GAAKA,EAAEC,aAAef,EAAoBS,MAAMO,KAC1FJ,GACHb,EAAoBU,MAAMjB,KAAK,CAC7BuB,WAAYf,EAAoBS,MAAMO,GACtCC,KAAMjB,EAAoBS,MAAMS,QAItC,SAASC,EAA2BH,GAClC,MAAMI,EAAyB,GAC/BrB,EAAoBU,MAAMY,SAAQC,IAC5BA,EAAKP,aAAeC,GACtBI,EAAuB5B,KAAK8B,MAGhCvB,EAAoBU,MAAQW,EAG9BG,eAAeC,IACb,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,IAAQ,UAC/BD,EAASE,KAAKN,SAAQO,IACpBlC,EAAYe,MAAMjB,KAAK,CACrBwB,GAAIY,EAAQZ,GACZE,MAAOU,EAAQC,cAGnB,MAAOC,GACPlC,EAAakC,MAAMA,EAAMC,WAhC7BC,EAAAA,EAAAA,KAAUT,gBACFC,OAkCR,MAAMS,EAASV,UACb,IACE,GAAyC,IAArCxB,EAAoBU,MAAMlB,OAE5B,YADAK,EAAakC,MAAM,wCAEd,GAAmB,KAAf7B,EAAKG,MAEd,YADAR,EAAakC,MAAM,0BAEd,GAAqB,KAAjB7B,EAAKE,QAEd,YADAP,EAAakC,MAAM,4BAGrB7B,EAAKP,YAAcK,EACnB,MAAM0B,QAAiBC,EAAAA,EAAAA,KAAS,SAAUzB,GAC1CL,EAAasC,QAAQT,EAASM,SAC9BvB,IACA,MAAOsB,GACPlC,EAAakC,MAAMA,EAAMC,W,0wDCrF7B,MAAMtC,EAAc,EAEpB","sources":["webpack://admin-one-vue-tailwind/./src/components/Field.vue","webpack://admin-one-vue-tailwind/./src/components/Field.vue?7442","webpack://admin-one-vue-tailwind/./src/views/Memo/CreateMemo.vue","webpack://admin-one-vue-tailwind/./src/views/Memo/CreateMemo.vue?30e1"],"sourcesContent":["<script setup>\nimport { computed, useSlots } from 'vue'\n\ndefineProps({\n  label: {\n    type: String,\n    default: null\n  },\n  help: {\n    type: String,\n    default: null\n  }\n})\n\nconst slots = useSlots()\n\nconst wrapperClass = computed(() => {\n  const base = []\n  const slotsLength = slots.default().length\n\n  if (slotsLength > 1) {\n    base.push('grid grid-cols-1 gap-3')\n  }\n\n  if (slotsLength === 2) {\n    base.push('md:grid-cols-2')\n  }\n\n  return base\n})\n</script>\n\n<template>\n  <div class=\"mb-6 last:mb-0\">\n    <label\n      v-if=\"label\"\n      class=\"block font-bold mb-2\"\n    >{{ label }}</label>\n    <div :class=\"wrapperClass\">\n      <slot />\n    </div>\n    <div\n      v-if=\"help\"\n      class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\"\n    >\n      {{ help }}\n    </div>\n  </div>\n</template>\n","import script from \"./Field.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Field.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { reactive, ref, onMounted } from 'vue'\nimport { mdiBallot } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport Api from '@/api'\nimport { useToast } from 'vue-toastification'\n\nconst receipients = ref([])\nconst toastMessage = useToast()\n\n// const receipients = ref([])\nconst editor = ref(null)\n\nconst selectedReceipients = ref([])\nconst receipientSelectBox = ref({})\nconst form = reactive({\n  receipients: null,\n  content: '',\n  title: '',\n  date: new Date().toString()\n})\n\nfunction clearInputs () {\n  selectedReceipients.value = []\n  form.content = ''\n  form.date = new Date().toString()\n  form.title = ''\n  editor.value.setHTML('')\n}\n\nonMounted(async () => {\n  await getUsers()\n})\nfunction setReceipient () {\n  const isExist = selectedReceipients.value.find(t => t.receipient === receipientSelectBox.value.id)\n  if (!isExist) {\n    selectedReceipients.value.push({\n      receipient: receipientSelectBox.value.id,\n      name: receipientSelectBox.value.label\n    })\n  }\n}\nfunction removeSelectedReciepients (id) {\n  const newSelectedReceipients = []\n  selectedReceipients.value.forEach(item => {\n    if (item.receipient !== id) {\n      newSelectedReceipients.push(item)\n    }\n  })\n  selectedReceipients.value = newSelectedReceipients\n}\n\nasync function getUsers () {\n  try {\n    const response = await Api.get('/users')\n    response.data.forEach(element => {\n      receipients.value.push({\n        id: element.id,\n        label: element.fullName\n      })\n    })\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\nconst submit = async () => {\n  try {\n    if (selectedReceipients.value.length === 0) {\n      toastMessage.error('You must select atleast 1 receipient')\n      return\n    } else if (form.title === '') {\n      toastMessage.error('Memo Title is required')\n      return\n    } else if (form.content === '') {\n      toastMessage.error('Memo Content is required')\n      return\n    }\n    form.receipients = selectedReceipients\n    const response = await Api.post('/memos', form)\n    toastMessage.success(response.message)\n    clearInputs()\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\n</script>\n<template>\n  <div>\n    <main-section>\n      <card-component\n        title=\"Create Memo\"\n        :icon=\"mdiBallot\"\n        form\n        @submit.prevent=\"submit\"\n      >\n        <field label=\"Receipient\">\n          <control\n            v-model=\"receipientSelectBox\"\n            :options=\"receipients\"\n            @change=\"setReceipient\"\n          />\n        </field>\n        <div\n          v-if=\"selectedReceipients.length\"\n          class=\"bg-opacity-50 p-3 dark:bg-gray-800\"\n        >\n          <span\n            v-for=\"receipient in selectedReceipients\"\n            :key=\"receipient.receipient\"\n            class=\"inline-block px-2 py-1 rounded-sm mr-2 text-sm dark:bg-gray-700 light:bg-gray-300\"\n          >\n            {{ receipient.name }} <span><button\n              class=\"inline-block bg-red-700 p-1 rounded-sm mr-2 text-white-700\"\n              @click=\"removeSelectedReciepients(receipient.receipient)\"\n            >X</button></span>\n          </span>\n        </div>\n        <divider />\n        <field label=\"Memo Title\">\n          <control\n            v-model=\"form.title\"\n          />\n        </field>\n        <divider />\n        <field label=\"Date\">\n          <datepicker\n            v-model=\"form.date\"\n            auto-apply\n            alt-position\n          />\n        </field>\n        <divider />\n        <field label=\"Memo Content\">\n          <QuillEditor\n            ref=\"editor\"\n            v-model:content=\"form.content\"\n            theme=\"snow\"\n            content-type=\"html\"\n            toolbar=\"full\"\n          />\n        </field>\n        <divider />\n        <jb-buttons>\n          <jb-button\n            type=\"submit\"\n            color=\"info\"\n            label=\"Send\"\n          />\n        </jb-buttons>\n      </card-component>\n    </main-section>\n  </div>\n</template>\n","import script from \"./CreateMemo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreateMemo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["slots","useSlots","wrapperClass","computed","base","slotsLength","default","length","push","__exports__","receipients","ref","toastMessage","useToast","editor","selectedReceipients","receipientSelectBox","form","reactive","content","title","date","Date","toString","clearInputs","value","setHTML","setReceipient","isExist","find","t","receipient","id","name","label","removeSelectedReciepients","newSelectedReceipients","forEach","item","async","getUsers","response","Api","data","element","fullName","error","message","onMounted","submit","success"],"sourceRoot":""}