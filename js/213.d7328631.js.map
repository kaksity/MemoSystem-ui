{"version":3,"file":"js/213.d7328631.js","mappings":"mgBAGA,MAAMA,EAAc,EAEpB,O,+hBC8BMC,GAAQC,EAAAA,EAAAA,IAAS,CACrBC,IAAKA,IAAMC,EAAMC,WACjBC,IAAKL,GAASM,EAAK,oBAAqBN,KAGpCO,EAAgBC,IACpBR,EAAMA,OAAQ,EACdM,EAAKE,EAAK,EAGNC,EAAUA,IAAMF,EAAc,WAE9BG,EAASA,IAAMH,EAAc,U,iyBC5CnC,MAAMR,EAAc,EAEpB,O,2YCQA,MAAMY,EAAY,CAChB,YACA,WACA,YACA,UAGIC,GAAQC,EAAAA,EAAAA,IAAI,IAEZC,GAAeC,EAAAA,EAAAA,MAEfC,GAAsBH,EAAAA,EAAAA,KAAI,GAE1BI,GAASJ,EAAAA,EAAAA,IAAI,IAEnBK,eAAeC,IACb,IACE,MAAM,KAAEC,SAAeC,EAAAA,EAAAA,IAAQ,UAC/BT,EAAMZ,MAAQoB,CAGhB,CAFE,MAAOE,GACPR,EAAaQ,MAAMA,EAAMC,QAC3B,CACF,CAEA,SAASC,EAAYC,GACnBJ,EAAAA,EAAAA,UAAY,UAASI,KAAMC,MAAK,EAAGH,cACjCT,EAAaa,QAAQJ,GACrBJ,GAAU,IACTS,OAAON,IACRR,EAAaQ,MAAMA,EAAMO,OAAO,GAEpC,C,OAEAC,EAAAA,EAAAA,KAAUZ,gBACFC,GAAU,I,y7BC5ClB,MAAMpB,EAAc,EAEpB,O","sources":["webpack://admin-one-vue-tailwind/./src/components/DataTable.vue","webpack://admin-one-vue-tailwind/./src/components/ModalBox.vue","webpack://admin-one-vue-tailwind/./src/components/ModalBox.vue?1210","webpack://admin-one-vue-tailwind/./src/views/User/Index.vue","webpack://admin-one-vue-tailwind/./src/views/User/Index.vue?d960"],"sourcesContent":["import script from \"./DataTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DataTable.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue'\nimport { mdiClose } from '@mdi/js'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Divider from '@/components/Divider.vue'\nimport Overlay from '@/components/Overlay.vue'\n\nconst props = defineProps({\n  title: {\n    type: String,\n    default: null\n  },\n  largeTitle: {\n    type: String,\n    default: null\n  },\n  button: {\n    type: String,\n    default: 'info'\n  },\n  buttonLabel: {\n    type: String,\n    default: 'Done'\n  },\n  hasCancel: Boolean,\n  modelValue: {\n    type: [String, Number, Boolean],\n    default: null\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'cancel', 'confirm'])\n\nconst value = computed({\n  get: () => props.modelValue,\n  set: value => emit('update:modelValue', value)\n})\n\nconst confirmCancel = mode => {\n  value.value = false\n  emit(mode)\n}\n\nconst confirm = () => confirmCancel('confirm')\n\nconst cancel = () => confirmCancel('cancel')\n</script>\n\n<template>\n  <overlay\n    v-show=\"value\"\n    @overlay-click=\"cancel\"\n  >\n    <card-component\n      v-show=\"value\"\n      :title=\"title\"\n      class=\"shadow-lg w-full max-h-modal md:w-3/5 lg:w-2/5 z-50\"\n      rounded=\"rounded-lg\"\n      :header-icon=\"mdiClose\"\n      modal\n      @header-icon-click=\"cancel\"\n    >\n      <div class=\"space-y-3\">\n        <h1\n          v-if=\"largeTitle\"\n          class=\"text-2xl\"\n        >\n          {{ largeTitle }}\n        </h1>\n        <slot />\n      </div>\n\n      <divider />\n\n      <jb-buttons>\n        <jb-button\n          :label=\"buttonLabel\"\n          :color=\"button\"\n          @click=\"confirm\"\n        />\n        <jb-button\n          v-if=\"hasCancel\"\n          label=\"Cancel\"\n          :color=\"button\"\n          outline\n          @click=\"cancel\"\n        />\n      </jb-buttons>\n    </card-component>\n  </overlay>\n</template>\n","import script from \"./ModalBox.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ModalBox.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, onMounted } from 'vue'\nimport MainSection from '@/components/MainSection.vue'\n// import Notification from '@/components/Notification.vue'\nimport DataTable from '@/components/DataTable.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Api from '@/api'\nimport ModalBox from '@/components/ModalBox.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport { mdiTrashCan } from '@mdi/js'\nimport { useToast } from 'vue-toastification'\n\nconst tableHead = [\n  'Full Name',\n  'Username',\n  'Role Name',\n  'Action'\n]\n\nconst users = ref([])\n\nconst toastMessage = useToast()\n\nconst isModalDangerActive = ref(false)\n\nconst userId = ref('')\n\nasync function getUsers () {\n  try {\n    const { data } = await Api.get('/users')\n    users.value = data\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\n\nfunction deleteUser (id) {\n  Api.delete(`/users/${id}`).then(({ message }) => {\n    toastMessage.success(message)\n    getUsers()\n  }).catch((error) => {\n    toastMessage.error(error.detail)\n  })\n}\n\nonMounted(async () => {\n  await getUsers()\n})\n</script>\n\n<template>\n  <div>\n    <main-section>\n      <card-component\n        class=\"mb-6\"\n        title=\"List of Users\"\n        has-table\n      >\n        <data-table\n          :theads=\"tableHead\"\n        >\n          <tr\n            v-for=\"user in users\"\n            :key=\"user.id\"\n          >\n            <td data-label=\"Full Name\">\n              {{ user.fullName }}\n            </td>\n            <td data-label=\"Username\">\n              {{ user.username }}\n            </td>\n            <td data-label=\"Role\">\n              {{ user.role.name }}\n            </td>\n            <td class=\"actions-cell\">\n              <jb-buttons\n                type=\"justify-start lg:justify-center\"\n                no-wrap\n              >\n                <jb-button\n                  color=\"danger\"\n                  :icon=\"mdiTrashCan\"\n                  small\n                  @click=\"isModalDangerActive = true, userId = user.id\"\n                />\n              </jb-buttons>\n            </td>\n          </tr>\n        </data-table>\n      </card-component>\n    </main-section>\n    <modal-box\n      v-model=\"isModalDangerActive\"\n      large-title=\"Please confirm\"\n      button=\"danger\"\n      has-cancel\n      @confirm=\"deleteUser(userId)\"\n    >\n      <p>Do you wish to delete this record?</p>\n    </modal-box>\n  </div>\n</template>\n","import script from \"./Index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["__exports__","value","computed","get","props","modelValue","set","emit","confirmCancel","mode","confirm","cancel","tableHead","users","ref","toastMessage","useToast","isModalDangerActive","userId","async","getUsers","data","Api","error","message","deleteUser","id","then","success","catch","detail","onMounted"],"sourceRoot":""}