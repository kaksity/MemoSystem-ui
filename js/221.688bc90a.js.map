{"version":3,"file":"js/221.688bc90a.js","mappings":"mLAAO,SAASA,EAAaC,EAAIC,GAC/B,OAAOD,EAAGE,QAAO,SAAUC,EAAIC,GAE7B,OADCD,EAAGC,EAAEH,IAAQE,EAAGC,EAAEH,KAAS,IAAII,KAAKD,GAC9BD,CACT,GAAG,CAAC,EACN,C,+UCSA,MAAMG,GAAQC,EAAAA,EAAAA,MAERC,GAAeC,EAAAA,EAAAA,KAAS,KAC5B,MAAMC,EAAO,GACPC,EAAcL,EAAMM,UAAUC,OAUpC,OARIF,EAAc,GAChBD,EAAKL,KAAK,0BAGQ,IAAhBM,GACFD,EAAKL,KAAK,kBAGLK,CAAI,I,+RCzBb,MAAMI,EAAc,EAEpB,O,wUCSA,MAAMC,GAAaC,EAAAA,EAAAA,IAAI,IACjBC,GAASD,EAAAA,EAAAA,IAAI,CAAC,GACdE,GAAeC,EAAAA,EAAAA,MAGfC,GAASJ,EAAAA,EAAAA,IAAI,MAEbK,GAAqBL,EAAAA,EAAAA,IAAI,IACzBM,GAAqBN,EAAAA,EAAAA,IAAI,CAAC,GAC1BO,GAAsBP,EAAAA,EAAAA,IAAI,IAE1BQ,GAAOC,EAAAA,EAAAA,IAAS,CACpBV,WAAY,KACZW,QAAS,GACTC,MAAO,KAGT,SAASC,IACPP,EAAmBQ,MAAQ,GAC3BN,EAAoBM,MAAQ,GAC5BL,EAAKM,QAAU,GACfN,EAAKG,MAAQ,GACbP,EAAOS,MAAME,QAAQ,GACvB,CAKA,SAASC,IACP,MAAMC,EAAUZ,EAAmBQ,MAAMK,MAAKC,GAAeA,IAAgBb,EAAmBO,MAAMO,KAEjGH,IACHZ,EAAmBQ,MAAMxB,KAAKiB,EAAmBO,MAAMO,IACvDb,EAAoBM,MAAMxB,KAAK,CAC7B+B,GAAId,EAAmBO,MAAMO,GAC7BC,KAAMf,EAAmBO,MAAMS,QAGrC,CAEA,SAASC,EAA0BH,GACjCf,EAAmBQ,MAAQW,EAAuBnB,EAAmBQ,MAAOO,GAC5Eb,EAAoBM,MAAQW,EAAuBjB,EAAoBM,MAAOO,EAChF,CAEA,SAASI,EAAwBC,EAAOxC,GACtC,MAAMyC,EAAW,GAMjB,OALAD,EAAME,SAAQC,IACPA,IAAY3C,GAAS2C,EAAQR,KAAOnC,GACvCyC,EAASrC,KAAKuC,EAChB,IAEKF,CACT,CAEAG,eAAeC,IACb,IACE,MAAM,KAAEC,SAAeC,EAAAA,EAAAA,IAAQ,UAC/BD,EAAKJ,SAAQC,IACX7B,EAAWc,MAAMxB,KAAK,CACpB+B,GAAIQ,EAAQR,GACZE,MAAOM,EAAQK,UACf,GAIN,CAFE,MAAOC,GACPhC,EAAagC,MAAMA,EAAMpB,QAC3B,CACF,CACA,SAASqB,IACPlC,EAAOY,MAAQ,CAAC,CAClB,EA7CAuB,EAAAA,EAAAA,KAAUP,gBACFC,GAAU,IA6ClB,MAAMO,EAASR,UACb,IACEM,IACA3B,EAAKT,WAAaM,EAClB,MAAM,QAAES,SAAkBkB,EAAAA,EAAAA,KAAS,YAAaxB,GAChDN,EAAaoC,QAAQxB,GACrBF,GAOF,CANE,MAAOsB,GACHA,EAAMjC,OACRA,EAAOY,OAAQ9B,EAAAA,EAAAA,GAAYmD,EAAMjC,OAAQ,SAEzCC,EAAagC,MAAMA,EAAMK,OAE7B,G,gnDC/FF,MAAMzC,EAAc,EAEpB,O","sources":["webpack://admin-one-vue-tailwind/./src/helpers/group-errors.js","webpack://admin-one-vue-tailwind/./src/components/Field.vue","webpack://admin-one-vue-tailwind/./src/components/Field.vue?7442","webpack://admin-one-vue-tailwind/./src/views/Message/CreateMessage.vue","webpack://admin-one-vue-tailwind/./src/views/Message/CreateMessage.vue?39d3"],"sourcesContent":["export function groupErrors (xs, key) {\n  return xs.reduce(function (rv, x) {\n    (rv[x[key]] = rv[x[key]] || []).push(x)\n    return rv\n  }, {})\n};\n","<script setup>\nimport { computed, useSlots } from 'vue'\n\ndefineProps({\n  label: {\n    type: String,\n    default: null\n  },\n  help: {\n    type: String,\n    default: null\n  }\n})\n\nconst slots = useSlots()\n\nconst wrapperClass = computed(() => {\n  const base = []\n  const slotsLength = slots.default().length\n\n  if (slotsLength > 1) {\n    base.push('grid grid-cols-1 gap-3')\n  }\n\n  if (slotsLength === 2) {\n    base.push('md:grid-cols-2')\n  }\n\n  return base\n})\n</script>\n\n<template>\n  <div class=\"mb-6 last:mb-0\">\n    <label\n      v-if=\"label\"\n      class=\"block font-bold mb-2\"\n    >{{ label }}</label>\n    <div :class=\"wrapperClass\">\n      <slot />\n    </div>\n    <div\n      v-if=\"help\"\n      class=\"text-xs text-red-500 dark:text-red-400 mt-1\"\n    >\n      {{ help[0].message }}\n    </div>\n  </div>\n</template>\n","import script from \"./Field.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Field.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { reactive, ref, onMounted } from 'vue'\nimport { mdiBallot } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport Api from '@/api'\nimport { useToast } from 'vue-toastification'\nimport { groupErrors } from '@/helpers'\n\nconst recipients = ref([])\nconst errors = ref({})\nconst toastMessage = useToast()\n\n// const recipients = ref([])\nconst editor = ref(null)\n\nconst selectedRecipients = ref([])\nconst recipientSelectBox = ref({})\nconst displayedRecipients = ref([])\n\nconst form = reactive({\n  recipients: null,\n  content: '',\n  title: ''\n})\n\nfunction clearInputs () {\n  selectedRecipients.value = []\n  displayedRecipients.value = []\n  form.message = ''\n  form.title = ''\n  editor.value.setHTML('')\n}\n\nonMounted(async () => {\n  await getUsers()\n})\nfunction setRecipient () {\n  const isExist = selectedRecipients.value.find(recipientId => recipientId === recipientSelectBox.value.id)\n\n  if (!isExist) {\n    selectedRecipients.value.push(recipientSelectBox.value.id)\n    displayedRecipients.value.push({\n      id: recipientSelectBox.value.id,\n      name: recipientSelectBox.value.label\n    })\n  }\n}\n\nfunction removeSelectedRecipients (id) {\n  selectedRecipients.value = deleteElementFromArray(selectedRecipients.value, id)\n  displayedRecipients.value = deleteElementFromArray(displayedRecipients.value, id)\n}\n\nfunction deleteElementFromArray (array, key) {\n  const newArray = []\n  array.forEach(element => {\n    if ((element !== key) && (element.id !== key)) {\n      newArray.push(element)\n    }\n  })\n  return newArray\n}\n\nasync function getUsers () {\n  try {\n    const { data } = await Api.get('/users')\n    data.forEach(element => {\n      recipients.value.push({\n        id: element.id,\n        label: element.fullName\n      })\n    })\n  } catch (error) {\n    toastMessage.error(error.message)\n  }\n}\nfunction clearErrors () {\n  errors.value = {}\n}\nconst submit = async () => {\n  try {\n    clearErrors()\n    form.recipients = selectedRecipients\n    const { message } = await Api.post('/messages', form)\n    toastMessage.success(message)\n    clearInputs()\n  } catch (error) {\n    if (error.errors) {\n      errors.value = groupErrors(error.errors, 'field')\n    } else {\n      toastMessage.error(error.detail)\n    }\n  }\n}\n</script>\n<template>\n  <div>\n    <main-section>\n      <card-component\n        title=\"Create Message\"\n        :icon=\"mdiBallot\"\n        form\n        @submit.prevent=\"submit\"\n      >\n        <field\n          label=\"Recipient\"\n          :help=\"errors.recipients\"\n        >\n          <control\n            v-model=\"recipientSelectBox\"\n            :options=\"recipients\"\n            @change=\"setRecipient\"\n          />\n        </field>\n        <div\n          v-if=\"displayedRecipients.length\"\n          class=\"bg-opacity-50 p-3 dark:bg-gray-800\"\n        >\n          <span\n            v-for=\"(recipient, index) in displayedRecipients\"\n            :key=\"index\"\n            class=\"inline-block px-2 py-1 rounded-sm mr-2 text-sm dark:bg-gray-700 light:bg-gray-300\"\n          >\n            {{ recipient.name }} <span><JbButton\n              class=\"inline-block bg-red-700 p-1 rounded-sm mr-2 text-white-700\"\n              @click=\"removeSelectedRecipients(recipient.id)\"\n            >X</JbButton></span>\n          </span>\n        </div>\n        <divider />\n        <field\n          label=\"Message Title\"\n          :help=\"errors.title\"\n        >\n          <control\n            v-model=\"form.title\"\n          />\n        </field>\n        <divider />\n        <field\n          label=\"Message Content\"\n          :help=\"errors.content\"\n        >\n          <QuillEditor\n            ref=\"editor\"\n            v-model:content=\"form.content\"\n            theme=\"snow\"\n            content-type=\"html\"\n            toolbar=\"full\"\n          />\n        </field>\n        <divider />\n        <jb-buttons>\n          <jb-button\n            type=\"submit\"\n            color=\"info\"\n            label=\"Send\"\n          />\n        </jb-buttons>\n      </card-component>\n    </main-section>\n  </div>\n</template>\n","import script from \"./CreateMessage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreateMessage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["groupErrors","xs","key","reduce","rv","x","push","slots","useSlots","wrapperClass","computed","base","slotsLength","default","length","__exports__","recipients","ref","errors","toastMessage","useToast","editor","selectedRecipients","recipientSelectBox","displayedRecipients","form","reactive","content","title","clearInputs","value","message","setHTML","setRecipient","isExist","find","recipientId","id","name","label","removeSelectedRecipients","deleteElementFromArray","array","newArray","forEach","element","async","getUsers","data","Api","fullName","error","clearErrors","onMounted","submit","success","detail"],"sourceRoot":""}