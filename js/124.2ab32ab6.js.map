{"version":3,"file":"js/124.2ab32ab6.js","mappings":"mLAAO,SAASA,EAAaC,EAAIC,GAC/B,OAAOD,EAAGE,QAAO,SAAUC,EAAIC,GAE7B,OADCD,EAAGC,EAAEH,IAAQE,EAAGC,EAAEH,KAAS,IAAII,KAAKD,GAC9BD,CACT,GAAG,CAAC,EACN,C,+UCSA,MAAMG,GAAQC,EAAAA,EAAAA,MAERC,GAAeC,EAAAA,EAAAA,KAAS,KAC5B,MAAMC,EAAO,GACPC,EAAcL,EAAMM,UAAUC,OAUpC,OARIF,EAAc,GAChBD,EAAKL,KAAK,0BAGQ,IAAhBM,GACFD,EAAKL,KAAK,kBAGLK,CAAI,I,+RCzBb,MAAMI,EAAc,EAEpB,O,qUCQA,MAAMC,GAAaC,EAAAA,EAAAA,IAAI,IACjBC,GAAeC,EAAAA,EAAAA,MAEfC,GAASH,EAAAA,EAAAA,IAAI,CAAC,GACdI,GAASJ,EAAAA,EAAAA,IAAI,MAEbK,GAAqBL,EAAAA,EAAAA,IAAI,IACzBM,GAAqBN,EAAAA,EAAAA,IAAI,CAAC,GAC1BO,GAAsBP,EAAAA,EAAAA,IAAI,IAE1BQ,GAAOC,EAAAA,EAAAA,IAAS,CACpBV,WAAY,KACZW,QAAS,GACTC,MAAO,GACPC,KAAM,KAGR,SAASC,IACPR,EAAmBS,MAAQ,GAC3BN,EAAKE,QAAU,GACfF,EAAKI,KAAO,GACZJ,EAAKG,MAAQ,GACbP,EAAOU,MAAMC,QAAQ,GACvB,CAKA,SAASC,IACP,MAAMC,EAAUZ,EAAmBS,MAAMI,MAAKC,GAAMA,IAAOb,EAAmBQ,MAAMK,KAC/EF,IACHZ,EAAmBS,MAAMzB,KAAKiB,EAAmBQ,MAAMK,IACvDZ,EAAoBO,MAAMzB,KAAK,CAC7B8B,GAAIb,EAAmBQ,MAAMK,GAC7BC,KAAMd,EAAmBQ,MAAMO,QAGrC,CACA,SAASC,EAA0BH,GACjCd,EAAmBS,MAAQS,EAAuBlB,EAAmBS,MAAOK,GAC5EZ,EAAoBO,MAAQS,EAAuBhB,EAAoBO,MAAOK,EAChF,CAEAK,eAAeC,IACb,IACE,MAAM,KAAEC,SAAeC,EAAAA,EAAAA,IAAQ,UAC/BD,EAAKE,SAAQC,IACX9B,EAAWe,MAAMzB,KAAK,CACpB8B,GAAIU,EAAQV,GACZE,MAAOQ,EAAQC,UACf,GAIN,CAFE,MAAOC,GACP9B,EAAa8B,MAAMA,EAAMC,OAC3B,CACF,CACA,SAAST,EAAwBU,EAAOhD,GACtC,MAAMiD,EAAW,GAMjB,OALAD,EAAML,SAAQC,IACPA,IAAY5C,GAAS4C,EAAQV,KAAOlC,GACvCiD,EAAS7C,KAAKwC,EAChB,IAEKK,CACT,CACA,SAASC,IACPhC,EAAOW,MAAQ,CAAC,CAClB,CACA,SAASsB,EAAiBC,GACxB,OAAO,IAAIC,KAAKD,GAAOE,cAAcC,MAAM,KAAK,EAClD,EA7CAC,EAAAA,EAAAA,KAAUjB,gBACFC,GAAU,IA6ClB,MAAMiB,EAASlB,UACb,IACEW,IACA,MAAM,QAAEQ,SAAkBhB,EAAAA,EAAAA,KAAS,SAAU,CAC3C5B,WAAYM,EAAmBS,MAC/BJ,QAASF,EAAKE,QACdC,MAAOH,EAAKG,MACZC,KAAMwB,EAAgB5B,EAAKI,QAE7BX,EAAa2C,QAAQD,GACrB9B,GAOF,CANE,MAAOkB,GACHA,EAAM5B,OACRA,EAAOW,OAAQ/B,EAAAA,EAAAA,GAAYgD,EAAM5B,OAAQ,SAEzCF,EAAa8B,MAAMA,EAAMC,OAE7B,G,y4DClGF,MAAMlC,EAAc,EAEpB,O","sources":["webpack://admin-one-vue-tailwind/./src/helpers/group-errors.js","webpack://admin-one-vue-tailwind/./src/components/Field.vue","webpack://admin-one-vue-tailwind/./src/components/Field.vue?7442","webpack://admin-one-vue-tailwind/./src/views/CouncilMemo/CreateMemo.vue","webpack://admin-one-vue-tailwind/./src/views/CouncilMemo/CreateMemo.vue?b5fe"],"sourcesContent":["export function groupErrors (xs, key) {\n  return xs.reduce(function (rv, x) {\n    (rv[x[key]] = rv[x[key]] || []).push(x)\n    return rv\n  }, {})\n};\n","<script setup>\nimport { computed, useSlots } from 'vue'\n\ndefineProps({\n  label: {\n    type: String,\n    default: null\n  },\n  help: {\n    type: String,\n    default: null\n  }\n})\n\nconst slots = useSlots()\n\nconst wrapperClass = computed(() => {\n  const base = []\n  const slotsLength = slots.default().length\n\n  if (slotsLength > 1) {\n    base.push('grid grid-cols-1 gap-3')\n  }\n\n  if (slotsLength === 2) {\n    base.push('md:grid-cols-2')\n  }\n\n  return base\n})\n</script>\n\n<template>\n  <div class=\"mb-6 last:mb-0\">\n    <label\n      v-if=\"label\"\n      class=\"block font-bold mb-2\"\n    >{{ label }}</label>\n    <div :class=\"wrapperClass\">\n      <slot />\n    </div>\n    <div\n      v-if=\"help\"\n      class=\"text-xs text-red-500 dark:text-red-400 mt-1\"\n    >\n      {{ help[0].message }}\n    </div>\n  </div>\n</template>\n","import script from \"./Field.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Field.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { reactive, ref, onMounted } from 'vue'\nimport { mdiBallot } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport Api from '@/api'\nimport { useToast } from 'vue-toastification'\nimport { groupErrors } from '@/helpers'\nconst recipients = ref([])\nconst toastMessage = useToast()\n\nconst errors = ref({})\nconst editor = ref(null)\n\nconst selectedRecipients = ref([])\nconst recipientSelectBox = ref({})\nconst displayedRecipients = ref([])\n\nconst form = reactive({\n  recipients: null,\n  content: '',\n  title: '',\n  date: ''\n})\n\nfunction clearInputs () {\n  selectedRecipients.value = []\n  form.content = ''\n  form.date = ''\n  form.title = ''\n  editor.value.setHTML('')\n}\n\nonMounted(async () => {\n  await getUsers()\n})\nfunction setRecipient () {\n  const isExist = selectedRecipients.value.find(id => id === recipientSelectBox.value.id)\n  if (!isExist) {\n    selectedRecipients.value.push(recipientSelectBox.value.id)\n    displayedRecipients.value.push({\n      id: recipientSelectBox.value.id,\n      name: recipientSelectBox.value.label\n    })\n  }\n}\nfunction removeSelectedRecipients (id) {\n  selectedRecipients.value = deleteElementFromArray(selectedRecipients.value, id)\n  displayedRecipients.value = deleteElementFromArray(displayedRecipients.value, id)\n}\n\nasync function getUsers () {\n  try {\n    const { data } = await Api.get('/users')\n    data.forEach(element => {\n      recipients.value.push({\n        id: element.id,\n        label: element.fullName\n      })\n    })\n  } catch (error) {\n    toastMessage.error(error.detail)\n  }\n}\nfunction deleteElementFromArray (array, key) {\n  const newArray = []\n  array.forEach(element => {\n    if ((element !== key) && (element.id !== key)) {\n      newArray.push(element)\n    }\n  })\n  return newArray\n}\nfunction clearErrors () {\n  errors.value = {}\n}\nfunction processDateTime (input) {\n  return new Date(input).toISOString().split('T')[0]\n}\nconst submit = async () => {\n  try {\n    clearErrors()\n    const { message } = await Api.post('/memos', {\n      recipients: selectedRecipients.value,\n      content: form.content,\n      title: form.title,\n      date: processDateTime(form.date)\n    })\n    toastMessage.success(message)\n    clearInputs()\n  } catch (error) {\n    if (error.errors) {\n      errors.value = groupErrors(error.errors, 'field')\n    } else {\n      toastMessage.error(error.detail)\n    }\n  }\n}\n</script>\n<template>\n  <div>\n    <main-section>\n      <card-component\n        title=\"Create Memo\"\n        :icon=\"mdiBallot\"\n        form\n        @submit.prevent=\"submit\"\n      >\n        <field\n          label=\"Recipient\"\n          :help=\"errors.recipients\"\n        >\n          <control\n            v-model=\"recipientSelectBox\"\n            :options=\"recipients\"\n            @change=\"setRecipient\"\n          />\n        </field>\n        <div\n          v-if=\"selectedRecipients.length\"\n          class=\"bg-opacity-50 p-3 dark:bg-gray-800\"\n        >\n          <span\n            v-for=\"recipient in displayedRecipients\"\n            :key=\"recipient.recipient\"\n            class=\"inline-block px-2 py-1 rounded-sm mr-2 text-sm dark:bg-gray-700 light:bg-gray-300\"\n          >\n            {{ recipient.name }} <span><JButton\n              class=\"inline-block bg-red-700 p-1 rounded-sm mr-2 text-white-700\"\n              @click=\"removeSelectedRecipients(recipient.id)\"\n            >X</JButton></span>\n          </span>\n        </div>\n        <divider />\n        <field\n          label=\"Memo Title\"\n          :help=\"errors.title\"\n        >\n          <control\n            v-model=\"form.title\"\n          />\n        </field>\n        <divider />\n        <field\n          label=\"Date\"\n          :help=\"errors.date\"\n        >\n          <datepicker\n            v-model=\"form.date\"\n            auto-apply\n            alt-position\n          />\n        </field>\n        <divider />\n        <field\n          label=\"Memo Content\"\n          :help=\"errors.content\"\n        >\n          <QuillEditor\n            ref=\"editor\"\n            v-model:content=\"form.content\"\n            theme=\"snow\"\n            content-type=\"html\"\n            toolbar=\"full\"\n          />\n        </field>\n        <divider />\n        <jb-buttons>\n          <jb-button\n            type=\"submit\"\n            color=\"info\"\n            label=\"Send\"\n          />\n        </jb-buttons>\n      </card-component>\n    </main-section>\n  </div>\n</template>\n","import script from \"./CreateMemo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreateMemo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["groupErrors","xs","key","reduce","rv","x","push","slots","useSlots","wrapperClass","computed","base","slotsLength","default","length","__exports__","recipients","ref","toastMessage","useToast","errors","editor","selectedRecipients","recipientSelectBox","displayedRecipients","form","reactive","content","title","date","clearInputs","value","setHTML","setRecipient","isExist","find","id","name","label","removeSelectedRecipients","deleteElementFromArray","async","getUsers","data","Api","forEach","element","fullName","error","detail","array","newArray","clearErrors","processDateTime","input","Date","toISOString","split","onMounted","submit","message","success"],"sourceRoot":""}